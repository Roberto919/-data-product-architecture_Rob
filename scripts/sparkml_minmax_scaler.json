{"paragraphs":[{"text":"%pyspark\n\nfrom pyspark.ml.feature import MinMaxScaler\nfrom pyspark.ml.linalg import Vectors\n\ndata_frame = spark.createDataFrame([\n    (0, Vectors.dense([1.0, 0.1, -1.0]),),\n    (1, Vectors.dense([2.0, 1.1, 1.0]),),\n    (2, Vectors.dense([3.0, 10.1, 3.0]),)\n], [\"id\", \"features\"])\ndata_frame.show()\n\n","user":"anonymous","dateUpdated":"2020-03-31T22:15:55+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+--------------+\n| id|      features|\n+---+--------------+\n|  0|[1.0,0.1,-1.0]|\n|  1| [2.0,1.1,1.0]|\n|  2|[3.0,10.1,3.0]|\n+---+--------------+\n\n"}]},"apps":[],"jobName":"paragraph_1585692943969_-998975545","id":"20200331-221543_709570369","dateCreated":"2020-03-31T22:15:43+0000","dateStarted":"2020-03-31T22:15:55+0000","dateFinished":"2020-03-31T22:15:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5428"},{"text":"%pyspark\n# Configuramos el estimator MinMaxScaler como lo necesitamos\nscaler = MinMaxScaler(inputCol=\"features\", outputCol=\"scaled_features\")\n\n# Creamos el modelo MinMaxScaler (transformer)\nscaler_model = scaler.fit(data_frame)\n\n# Transformamos los datos reescalando \nscaled_data = scaler_model.transform(data_frame)\n# Nota que cuando pedimos getMin y getMax lo hacemos al estimator, no al modelo\nprint(\"Features scaled to range: [{}, {}]\".format(scaler.getMin(), scaler.getMax()))\nscaled_data.select(\"features\", \"scaled_features\").show(truncate=False)","user":"anonymous","dateUpdated":"2020-03-31T22:16:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Features scaled to range: [0.0, 1.0]\n+--------------+---------------+\n|features      |scaled_features|\n+--------------+---------------+\n|[1.0,0.1,-1.0]|[0.0,0.0,0.0]  |\n|[2.0,1.1,1.0] |[0.5,0.1,0.5]  |\n|[3.0,10.1,3.0]|[1.0,1.0,1.0]  |\n+--------------+---------------+\n\n"}]},"apps":[],"jobName":"paragraph_1585692955287_-156470224","id":"20200331-221555_1790390926","dateCreated":"2020-03-31T22:15:55+0000","dateStarted":"2020-03-31T22:16:00+0000","dateFinished":"2020-03-31T22:16:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5429"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2020-03-31T22:16:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1585692960805_-1539665787","id":"20200331-221600_1722330370","dateCreated":"2020-03-31T22:16:00+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:5430"}],"name":"sprakml_minmaxscaler","id":"2F4KQTH8P","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}